# 路線グリッド上の運賃計算シミュレーション
# 概要:
#   複数の路線と駅を持つ交通網において、累積運賃表をもとに指定されたルートを辿ったときの
#   合計運賃を計算するプログラム。
#
# 想定する構造:
# - N本の路線があり、各路線にはM個の駅が存在する
# - 各路線の駅には「始点からの累積運賃」が与えられている（非減少）
# - 同じ駅番号で別の路線に乗り換える場合は運賃無料
# - 移動の際は、到着する路線上でのみ運賃が発生し、その路線上の2駅間の差額を払う
#
# 条件:
# - 出発地点は必ず 路線1（インデックス0）、駅1（インデックス0）
# - 経路は (路線番号, 駅番号) の組で指定される（1始まりを0始まりに変換して扱う）
# - 運賃は常に正となる（差額を絶対値で扱うことに相当）
#
# メモ:
# - 問題文の記述を含まないため、公開しても問題なし
# - 累積和を使った差分計算の典型問題の一つ

# -------------------------------
# 以下は例示用の構造コード（処理概要）
# 実際の値は任意の方法で入力してOK
# -------------------------------

# 路線の数 N, 駅の数 M
N, M = 3, 4

# 累積運賃表（例：3路線 × 4駅）
fare = [
    [0, 1, 2, 3],
    [0, 4, 5, 6],
    [0, 7, 8, 9]
]

# 経由するルート（路線番号, 駅番号）※1始まり → 0始まりにして扱う
route = [(0, 3), (2, 1), (1, 1)]

# 現在位置（初期位置）
cur_line = 0
cur_station = 0
total_cost = 0

# 各目的地に対して処理
for next_line, next_station in route:
    if next_station == cur_station:
        # 駅番号が同じなら無料で乗り換え可能
        cost = 0
    else:
        # 同一路線上での移動（差額が運賃）
        cost = abs(fare[next_line][next_station] - fare[next_line][cur_station])
    total_cost += cost
    cur_line = next_line
    cur_station = next_station

print(total_cost)
